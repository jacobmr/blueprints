blueprint:
  name: Dimmer with Two Buttons (Tap + Hold)
  description: >
    Tap to turn on/off or change brightness. Hold to adjust brightness smoothly.
    Requires `dimming_loop` and `dimming_loop_down` scripts to exist in your system.
  domain: automation
  source_url: https://github.com/jacobmr/blueprints/blob/main/dimmer_two_button.yaml
  input:
    up_button:
      name: UP Button
      selector:
        entity:
          domain: binary_sensor
    down_button:
      name: DOWN Button
      selector:
        entity:
          domain: binary_sensor
    target_light:
      name: Light to control
      selector:
        target:
          entity:
            domain: light

mode: restart

variables:
  light_entity: !input target_light
  up_button_id: !input up_button
  down_button_id: !input down_button
  tap_min_ms: 50
  tap_max_ms: 400
  press_start_time: 0

trigger:
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input up_button
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input down_button

action:
  - variables:
      is_up: "{{ trigger.event.data.entity_id == up_button_id }}"
      new_state: "{{ trigger.event.data.new_state }}"
      old_state: "{{ trigger.event.data.old_state }}"
      event_duration_ms: >
        {% set start = old_state.last_changed.timestamp() %}
        {% set end = new_state.last_changed.timestamp() %}
        {{ ((end - start) * 1000) | int }}

  - choose:
      - conditions: "{{ new_state.state == 'off' }}"
        sequence:
          - choose:
              - conditions: "{{ is_up }}"
                sequence:
                  - choose:
                      - conditions: "{{ event_duration_ms > tap_min_ms and event_duration_ms < tap_max_ms }}"
                        sequence:
                          - service: light.turn_on
                            data:
                              entity_id: "{{ light_entity }}"
                              brightness_step_pct: 10
                              transition: 0.3
                      - conditions: "{{ event_duration_ms >= tap_max_ms }}"
                        sequence:
                          - service: script.dimming_loop
                            data:
                              variables:
                                target_light: "{{ light_entity }}"
                                direction: 'up'
              - conditions: "{{ not is_up }}"
                sequence:
                  - choose:
                      - conditions: "{{ event_duration_ms > tap_min_ms and event_duration_ms < tap_max_ms }}"
                        sequence:
                          - service: light.turn_off
                            data:
                              entity_id: "{{ light_entity }}"
                      - conditions: "{{ event_duration_ms >= tap_max_ms }}"
                        sequence:
                          - service: script.dimming_loop
                            data:
                              variables:
                                target_light: "{{ light_entity }}"
                                direction: 'down'
