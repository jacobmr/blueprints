blueprint:
  name: Dimmer Two Button (Click Only)
  description: Control a dimmable light with two binary sensors. Double-click UP=100%, double-click DOWN=off. Single UP=50% (if off) or +20%, single DOWN=20% (if off) or -20%.
  domain: automation
  source_url: https://raw.githubusercontent.com/jacobmr/blueprints/main/dimmer_two_button.yaml
  input:
    up_button:
      name: Up Button
      selector:
        entity:
          domain: binary_sensor
    down_button:
      name: Down Button
      selector:
        entity:
          domain: binary_sensor
    target_light:
      name: Target Light
      selector:
        entity:
          domain: light
    brightness_step:
      name: Brightness Step Percentage
      description: How much to change brightness with single click (default 20%)
      default: 20
      selector:
        number:
          min: 5
          max: 50
          step: 5
          unit_of_measurement: "%"
    double_click_window:
      name: Double Click Window
      description: Max time between clicks for double-click (default 400ms)
      default: 400
      selector:
        number:
          min: 200
          max: 600
          step: 50
          unit_of_measurement: "ms"

mode: restart
max_exceeded: silent

variables:
  up_button: !input up_button
  down_button: !input down_button
  target_light: !input target_light
  brightness_step: !input brightness_step
  double_click_window: !input double_click_window

trigger:
  - platform: state
    entity_id: !input up_button
    to: 'on'
    id: up_press
  - platform: state
    entity_id: !input down_button
    to: 'on'
    id: down_press

condition: []

action:
  - choose:
      # ============ UP BUTTON ============
      - conditions:
          - condition: trigger
            id: up_press
        sequence:
          # Wait for potential second click
          - wait_for_trigger:
              - platform: state
                entity_id: !input up_button
                to: 'on'
            timeout:
              milliseconds: "{{ double_click_window }}"
          
          - choose:
              # Second click detected = DOUBLE CLICK
              - conditions:
                  - condition: template
                    value_template: "{{ wait.trigger is not none }}"
                sequence:
                  # DOUBLE CLICK UP = 100%
                  - service: light.turn_on
                    target:
                      entity_id: !input target_light
                    data:
                      brightness_pct: 100
            
            # No second click = SINGLE CLICK
            default:
              # SINGLE CLICK UP = 50% if off, +20% if on
              - service: light.turn_on
                target:
                  entity_id: !input target_light
                data:
                  brightness_pct: >
                    {% if is_state(target_light, 'off') %}
                      50
                    {% else %}
                      {% set current = (state_attr(target_light, 'brightness') | int(0) / 255 * 100) | round(0) %}
                      {% set new_brightness = current + brightness_step %}
                      {% if new_brightness > 100 %}100{% else %}{{ new_brightness }}{% endif %}
                    {% endif %}

      # ============ DOWN BUTTON ============
      - conditions:
          - condition: trigger
            id: down_press
        sequence:
          # Wait for potential second click
          - wait_for_trigger:
              - platform: state
                entity_id: !input down_button
                to: 'on'
            timeout:
              milliseconds: "{{ double_click_window }}"
          
          - choose:
              # Second click detected = DOUBLE CLICK
              - conditions:
                  - condition: template
                    value_template: "{{ wait.trigger is not none }}"
                sequence:
                  # DOUBLE CLICK DOWN = Turn OFF
                  - service: light.turn_off
                    target:
                      entity_id: !input target_light
            
            # No second click = SINGLE CLICK
            default:
              # SINGLE CLICK DOWN = 20% if off, -20% if on
              - service: light.turn_on
                target:
                  entity_id: !input target_light
                data:
                  brightness_pct: >
                    {% if is_state(target_light, 'off') %}
                      20
                    {% else %}
                      {% set current = (state_attr(target_light, 'brightness') | int(0) / 255 * 100) | round(0) %}
                      {% set new_brightness = current - brightness_step %}
                      {% if new_brightness < brightness_step %}{{ brightness_step }}{% else %}{{ new_brightness }}{% endif %}
                    {% endif %}
